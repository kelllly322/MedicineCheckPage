@page "/"

@using System <!-- 引入 System 命名空間 -->
@using System.Collections.Generic <!-- 引入 System.Collections.Generic 命名空間 -->
@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager

<h3>@DateTime.Now.ToString("yyyy-MM-dd (dddd)")</h3>  <!-- 顯示當前日期和星期幾 -->
<hr />
<link href="css/Home.css" rel="stylesheet" />
@if (drugRecords != null && drugRecords.Count > 0) //<!-- 如果藥物清單不為空且包含藥物 -->
{
    <div class="drug-list">
        @foreach (var drug in drugRecords) //<!-- 遍歷藥物清單中的每個藥物 -->
        {
            <div class="drug-record">
                <div class="drug-info">
                    <img src="@drug.ImageUrl" alt="@drug.Name" class="drug-image" /><!-- 顯示藥物圖片 -->
                    <div class="details">
                        <h4>@drug.Name</h4> <!-- 顯示藥物名稱 -->
                        <label for="timeInput">時間:</label>
                        <input type="time" id="timeInput" @bind="drug.Time" /><!-- 顯示當前時間 -->
                        <p>劑量: @drug.Dosage</p> <!-- 顯示藥物用量 -->
                    </div>
                </div>
                <div class="buttons">
                    <button class="btn-skip" @onclick="() => OnSkipClicked(drug)">跳過</button>
                    <button class="btn-taken" @onclick="() => OnTakenClicked(drug)">吃藥</button>
                    @if (drug.ShowReasons) // 如果需要顯示原因選擇
                    {
                        <div class="reasons">
                            <h7>未吃藥原因: @drug.Reason</h7>
                            <label><input type="radio" name="reason" value="forgot">忘記吃藥</label>
                            <label><input type="radio" name="reason" value="dontWant">不想吃藥</label>
                            <label><input type="radio" name="reason" value="other">其他原因</label>
                            </div >
                    }
                </div>
            </div>
        }
        <hr />
        <div class="buttons">
            <button class="btn-finish" @onclick="() => OnFinishClicked()">提交</button> 
        </div>
    </div>
}
else
{
    <p>No drugs to track today.</p> <!-- 如果藥物清單為空，顯示無藥物追蹤的訊息 -->
}

<script>
    function changeButtonColor(buttonId) {
        var button = document.getElementById(buttonId);
        if (button) {
            button.style.backgroundColor = "black"; // 將按鈕的背景色設置為黑色，表示按下的狀態
            button.disabled = true; // 禁用按鈕，以防止進一步的點擊
        }
    }
</script>

@code {
    List<DrugRecord> drugRecords;
    <!-- 建立藥物清單的變數 -->
    protected override void OnInitialized() //<!-- 初始化方法 -->
    {
        // 初始化藥物清單（這裡是個範例）
        drugRecords = new List<DrugRecord> //<!-- 新增三個藥物到藥物清單 -->
        {
            new DrugRecord { Name = "康肯", Dosage = "10mg", ImageUrl = "pill1.png" },
            new DrugRecord { Name = "普立妥", Dosage = "20mg", ImageUrl = "pill2.jpg" },
            new DrugRecord { Name = "得安穩", Dosage = "5mg", ImageUrl = "pill3.jpg" },
            new DrugRecord { Name = "得安穩", Dosage = "8mg", ImageUrl = "pill4.jpg" },
            new DrugRecord { Name = "好克寧", Dosage = "10mg", ImageUrl = "pill5.jpg" }
        };
    }

    public class DrugRecord //<!-- 藥物記錄的類別 -->
    {
        public string Name { get; set; }
        <!-- 藥物名稱屬性 -->
        public string Dosage { get; set; }
        <!-- 藥物用量屬性 -->
        public string ImageUrl { get; set; }
        <!-- 藥物圖片URL屬性 -->
        public DateTime Time { get; set; } 
        <!-- 藥物時間屬性 -->
        public bool ShowReasons { get; set; } // Define the ShowReasons property
        public String Reason{ get; set; }
        public List<string> SideEffects { get; set; } // 副作用清單屬性
        public string SelectedReason { get; set; } // 用於儲存使用者選擇的原因
    }

    public bool loggedIn;
    void OnSkipClicked(DrugRecord drug)
    {
        drug.ShowReasons = true;
        jsRuntime.InvokeVoidAsync("changeButtonColor", "btn-skipped");
        loggedIn = true; // 設置按鈕已按下的狀態
    }

    void OnTakenClicked(DrugRecord drug)
    {
        drug.ShowReasons = false;
        jsRuntime.InvokeVoidAsync("changeButtonColor", "btn-taken");
        if (drug.Name == "得安穩") // 如果是特定藥物
        {
            ShowSideEffectsForm(drug); // 顯示填寫副作用的表單
        }
        else
        {
            drug.ShowReasons = false;
            jsRuntime.InvokeVoidAsync("changeButtonColor", "btn-taken");
        }
    }

    async Task ShowSideEffectsForm(DrugRecord drug)
    {
        // 使用 JavaScript 顯示填寫副作用的表單或彈出視窗
        await jsRuntime.InvokeVoidAsync("showSideEffectsForm", drug.Name);

        // 等待 JavaScript 調用完成並收集副作用資訊
        drug.SideEffects = await jsRuntime.InvokeAsync<List<string>>("collectSideEffects");
        drug.ShowReasons = false; // 關閉原因選擇

        // 更改按鈕顏色
        await jsRuntime.InvokeVoidAsync("changeButtonColor", "btn-taken");
    }

    void OnFinishClicked()
    {
        if (loggedIn)
        {
            NavigationManager.NavigateTo("/ finish"); // 登入成功後導航至首頁
        }
    }
}